    // RED GOAL RUSH WP
    // pros::Task anti_jam_task(anti_jam);
    // chassis.turnToHeading(-18, 1000,{.minSpeed=50, .earlyExitRange=12}, false);
    // intake.move_velocity(600);
    // chassis.moveToPoint(-15, 41.5, 2000, {}, false);
    // doinker.set_value(true);
    // pros::delay(300);
    // chassis.moveToPose(-15, 10, 0, 2000, {.forwards=false, .minSpeed=35}, false);
    // doinker.set_value(false);
    // pros::delay(200);
    // chassis.turnToHeading(-145, 1000, {.minSpeed=50}, false);
    // chassis.moveToPoint(-6, 23 , 1000, {.forwards=false, .minSpeed=25}, false);
    // clamp.set_value(true);
    // pros::delay(250);
    // hook.move_velocity(600);
    // intake.move_velocity(600);
    // pros::delay(400);
    // clamp.set_value(false);
    // hook.brake();
    // chassis.moveToPose(-35, 34, 90, 3000, {.forwards=false, .minSpeed=25}, false);
    // clamp.set_value(true);
    // pros::delay(250);
    // clamp_down = true;
    // intake.move_velocity(600);
    // hook.move_velocity(600);
    // pros::delay(700);
    // hook.move_velocity(0);
    // anti_jam_task.suspend();
    // pros::Task color_sort(anti_jam);
    // doinker.set_value(true);
    // chassis.moveToPose(15, -6, 135, 2400, {.minSpeed=40}, false);
    // chassis.turnToHeading(45, 1000, {.minSpeed=40}, false);
    // doinker.set_value(false);
    // intake.move_velocity(600);
    // hook.move_velocity(600);
    // chassis.moveToPose(14, 18, 20, 1000, {.minSpeed=30}, false);
    // pros::delay(800);
    // intake.move_velocity(600);
    // chassis.turnToHeading(0, 1000, {.minSpeed=30}, false);
    // intake.move_velocity(600);
    // chassis.turnToHeading(-45, 1000, {.minSpeed=30}, false);
    // lb.move_absolute(-2000, 400);
    // chassis.moveToPose(-44, 44, -45, 3000, {.minSpeed=40}, false);

    //BLUE GOAL RUSH
    pros::Task anti_jam_task(anti_jam);
    chassis.turnToHeading(23, 1000,{.minSpeed=50, .earlyExitRange=12}, false);
    intake.move_velocity(600);
    chassis.moveToPoint(7, 40, 2000, {}, false);
    doinker.set_value(true);
    pros::delay(300);
    chassis.moveToPose(7, 10, 0, 2000, {.forwards=false, .minSpeed=35}, false);
    doinker.set_value(false);
    chassis.moveToPose(7, 4, 0, 2000, {.forwards=false, .minSpeed=35}, false);
    chassis.turnToHeading(-135, 1000, {.minSpeed=50}, false);
    chassis.moveToPoint(13, 23.5 , 1000, {.forwards=false, .minSpeed=25}, false);
    clamp.set_value(true);
    pros::delay(250);
    hook.move_velocity(600);
    intake.move_velocity(600);
    pros::delay(300);
    hook.brake();
    chassis.turnToHeading(-245, 3000, {.earlyExitRange=15}, false);
    clamp.set_value(false);
    hook.brake();
    chassis.turnToHeading(-100, 1000, {.earlyExitRange=15}, false);
    //chassis.moveToPoint(6, 10, 500, {.minSpeed=45}, false);
    hook.brake();
    chassis.moveToPose(48.5, 24.5, -90, 3000, {.forwards=false, .minSpeed=25}, false);
    pros::delay(250);
    hook.brake();
    clamp.set_value(true);
    pros::delay(250);
    clamp_down = true;
    intake.move_velocity(600);
    hook.move_velocity(600);
    pros::delay(700);
    hook.move_velocity(0);
    doinker.set_value(true);
    chassis.moveToPose(-15, -27, -135, 1900, {.minSpeed=40}, false);
    chassis.turnToHeading(-270, 1000, {.minSpeed=30}, false);
    doinker.set_value(false);
    intake.move_velocity(600);;
    hook.move_velocity(600);

    //quals
    // chassis.turnToHeading(90, 1000);
    // lb.move_absolute(-2000, 400);
    // chassis.moveToPose(47, 37, 45, 3000, {.minSpeed=30}, false);

    //elims
    clamp.set_value(false);
    chassis.turnToHeading(90, 1000);
    chassis.moveToPose(27, 37, 45, 3000, { .forwards=false, .minSpeed=30}, false);

    //blue 2 ring
    // chassis.moveToPoint(0, -40, 3000, {.forwards=false, .maxSpeed=75}, false);
    // pros::delay(200);
    // clamp_down = true;
    // clamp.set_value(true);
    // pros::delay(200);
    // intake.move_velocity(600);
    // hook.move_velocity(600);
    // pros::delay(1000);
    // chassis.turnToHeading(90, 3000);
    // chassis.moveToPoint(23, -38, 3000);
    // pros::delay(3000);
    // intake.move_velocity(0);
    // hook.move_velocity(0);
    // chassis.turnToHeading(-90, 3000, {}, false);
    // chassis.moveToPoint(-17, -38, 3000, {}, false);
    // chassis.turnToHeading(-135, 3000, {}, false);
    // lb.move_absolute(-2000, 400);


    //red 2 ring
    // chassis.moveToPoint(0, -40, 3000, {.forwards=false, .maxSpeed=75}, false);
    // pros::delay(200);
    // clamp_down = true;
    // clamp.set_value(true);
    // pros::delay(200);
    // intake.move_velocity(600);
    // hook.move_velocity(600);
    // pros::delay(1000);
    // chassis.turnToHeading(-90, 3000);
    // chassis.moveToPoint(-23, -38, 3000);
    // pros::delay(3000);
    // intake.move_velocity(0);
    // hook.move_velocity(0);
    // chassis.turnToHeading(90, 3000, {}, false);
    // chassis.moveToPoint(27, -38, 3000, {}, false);
    // lb.move_absolute(-2000, 400);

    //go back
    // pros::delay(10000);
    // chassis.moveToPoint(0, -20, 3000, {.forwards=false});

    //NEW red left
    // chassis.moveToPoint(0, 1, 1000, {.minSpeed=30}, false);
    // chassis.setPose(-4,0, -45);
    // lb.move_absolute(-410, 600);
    // pros::delay(200);
    // intake.move_velocity(200);
    // hook.move_velocity(300);
    // pros::delay(500);
    // hook.brake();
    // pros::delay(400);
    // lb.move_absolute(-2500, 600);
    // pros::delay(1800);
    // lb.move_absolute(0, 600);
    // pros::delay(500);
    // chassis.moveToPose(6, -39, 0, 2000, {.forwards=false, .horizontalDrift = 8, .lead = 0.3, .maxSpeed=65, .minSpeed=15}, false);
    // pros::delay(250);
    // pros::Task anti_jam_task(anti_jam);
    // clamp.set_value(true);
    // clamp_down=true;
    // pros::delay(250);
    // hook.move_velocity(600);
    // intake.move_velocity(200);
    // chassis.moveToPose(30, -35, 97, 1500, {.earlyExitRange=2}, false);
    // chassis.moveToPose(33, -50.5, 180, 1500, {}, false);
    // intake.move_velocity(200);
    // chassis.moveToPose(33, -35, 180, 1500, {.forwards=false, .earlyExitRange=2}, false);
    // intake.move_velocity(200);
    // chassis.moveToPose(24, -50.5, 180, 1900, {}, false);
    // pros::delay(250);
    // chassis.moveToPose(24, -35, 180, 1500, {.forwards=false, .earlyExitRange=2}, false);
    // lb.move_absolute(-2000, 600);
    // chassis.moveToPose(-10, -45, -135, 1500, {.earlyExitRange=2}, false);

    //NEW blue right
    // chassis.moveToPoint(0, 1, 1000, {.minSpeed=30}, false);
    // chassis.setPose(4,0, 45);
    // lb.move_absolute(-410, 600);
    // pros::delay(200);
    // intake.move_velocity(200);
    // hook.move_velocity(300);
    // pros::delay(500);
    // hook.brake();
    // pros::delay(400);
    // lb.move_absolute(-2500, 600);
    // pros::delay(1600);
    // lb.move_absolute(0, 600);
    // pros::delay(400);
    // chassis.moveToPose(-6, -38, 0, 2000, {.forwards=false, .horizontalDrift = 8, .lead = 0.3, .maxSpeed=65}, false);
    // //pros::delay(300);
    // clamp.set_value(true);
    // clamp_down=true;
    // pros::delay(500);
    // hook.move_velocity(600);
    // pros::delay(35);
    // intake.move_velocity(400);
    // pros::Task anti_jam_task(anti_jam);
    // chassis.moveToPose(-28, -38, -100, 1500, {.earlyExitRange=2}, false);
    // chassis.moveToPose(-34, -53.7, -180, 1500, {}, false);
    // chassis.moveToPose(-34, -35, -180, 1500, {.forwards=false, .earlyExitRange=2}, false);
    // chassis.moveToPose(-22, -53, -180, 1900, {}, false);
    // pros::delay(250);
    // chassis.moveToPose(-22, -35, -180, 1500, {.forwards=false, .earlyExitRange=2}, false);
    // lb.move_absolute(-2000, 600);
    // chassis.moveToPose(10, -38, 135,1500, {.minSpeed=65}, false);

    // SKILLS
    // chassis.moveToPoint(0, 0.8, 3000, {}, false);
    // hook.move_velocity(600);
    // intake.move_velocity(600);
    // pros::delay(250);
    // chassis.moveToPoint(-5, 16, 3000, {.earlyExitRange=2}, false);
    // hook.move_velocity(0);
    // chassis.moveToPoint(23, 15, 3000, {.forwards=false, .maxSpeed=65}, false);
    // pros::delay(250);
    // clamp.set_value(true);
    // pros::delay(250);
    // hook.move_velocity(600);
    // chassis.moveToPoint(20, 37, 3000, {.earlyExitRange=2}, false);
    // chassis.moveToPoint(52, 60, 3000, {}, false);
    // chassis.moveToPoint(42, 89, 3000, {});
    // lb.move_absolute(-410, 400);
    // pros::delay(1000);
    // chassis.moveToPose(62, 59, 90, 3000, {}, false);
    // pros::delay(500);
    // chassis.moveToPose(67, 59, 90, 1000, {});
    // hook.move_velocity(0);
    // lb.move_absolute(-2000, 400);
    // //chassis.moveToPose(59, 58, 90, 1000, {});
    // //pros::delay(1000);
    // pros::delay(300);
    // hook.move_velocity(600);
    // chassis.moveToPose(59, 59, 90, 3000, {.forwards=false}, false);
    // lb.move_absolute(0, 400);
    // chassis.moveToPoint(50, 59, 1000, {.forwards=false}, false);
    // chassis.moveToPose(53, 37, 180, 3000, {.maxSpeed=65}, false);
    // chassis.moveToPoint(50, -2, 3000, {.maxSpeed=65}, false);
    // pros::delay(500);
    // chassis.moveToPoint(50, 30, 3000, {.forwards=false}, false);
    // chassis.moveToPoint(60, 10, 3000, {}, false);
    // pros::delay(1200);
    // chassis.turnToHeading(-45, 3000);
    // //hook.move_velocity(0);
    // chassis.moveToPoint(62, 0, 800, {.forwards=false}, false);
    // clamp.set_value(false);
    // pros::delay(250);
    // hook.move_velocity(600);
    // chassis.moveToPoint(10, 13, 3000, {.earlyExitRange=2}, false);
    // hook.brake();
    // chassis.moveToPose(-36, 15, 90, 3000, {.forwards=false, .maxSpeed=65}, false);
    // pros::delay(250);
    // clamp.set_value(true);
    // pros::delay(250);
    // hook.move_velocity(600);
    // chassis.moveToPoint(-32, 37, 3000, {.earlyExitRange=2}, false);
    // chassis.moveToPoint(-62, 60, 3000, {}, false);
    // pros::delay(500);
    // chassis.moveToPoint(-55, 89, 3000, {});
    // pros::delay(1000);
    // lb.move_absolute(-410, 400);
    // chassis.moveToPose(-73, 69, -90, 3000, {}, false);
    // pros::delay(500);
    // chassis.moveToPose(-82, 69, -90, 1000, {});
    // hook.move_velocity(0);
    // //chassis.moveToPose(-65, 65, -90, 1000, {});
    // lb.move_absolute(-2000, 400);
    // //pros::delay(1000);
    // pros::delay(300);
    // hook.move_velocity(600);
    // chassis.moveToPose(-68, 69, -90, 1000, {.forwards=false}, false);
    // lb.move_absolute(0, 400);
    // chassis.moveToPoint(-51, 69, 1000, {.forwards=false}, false);
    // chassis.moveToPose(-50, 37, 180, 3000, {.maxSpeed=65}, false);
    // chassis.moveToPoint(-49, 5, 3000, {.maxSpeed=65}, false);
    // pros::delay(500);
    // chassis.moveToPoint(-54, 30, 3000, {.forwards=false}, false);
    // chassis.moveToPoint(-64, 15, 3000, {}, false);

    // pros::delay(1200);
    // chassis.turnToHeading(45, 3000);
    // chassis.moveToPoint(-80, -2, 800, {.forwards=false}, false);
    // clamp.set_value(false);
    // chassis.moveToPoint(-62, 60, 3000, {.earlyExitRange=2});
    // hook.move_velocity(0);
    // intake.move_velocity(600);
    // chassis.moveToPoint(-42, 90, 4000, {}, false);
    // // hook.move_velocity(200);
    // // while (true){
    // //     if (optical.get_hue() > 5 & optical.get_hue() < 45){
    // //         hook.move_velocity(0);
    // //         break;
    // //     }
    // //     pros::delay(10);
    // // }
    // // chassis.moveToPose(-18, 110, 210 , 4000, {.forwards=false}, false);
    // // pros::delay(250);
    // // clamp.set_value(true);
    // // pros::delay(250);
    // // chassis.moveToPoint(19, 89, 3000, {}, false);
    // // chassis.moveToPoint(62, 125, 3000, {.forwards=false}, false);
    // // clamp.set_value(false);
    // // pros::delay(250);
    // // chassis.moveToPoint(19, 110, 3000, {.earlyExitRange=2}, false);
    // // chassis.moveToPose(-18, 120, 90, 3000, {.earlyExitRange=2}, false);
    // // chassis.moveToPoint(-80, 135, 3000, {}, false);
    // chassis.moveToPose(-20, 110, 210 , 4000, {.forwards=false}, false);
    // pros::delay(250);
    // clamp.set_value(true);
    // pros::delay(250);
    // hook.move_velocity(600);
    // //pros::delay(750);
    // chassis.turnToHeading(60, 3000, {}, false);
    // clamp.set_value(false);
    // intake.brake();
    // hook.brake();
    // chassis.moveToPoint(88, 135, 2000, {.minSpeed=100}, false);
    // // chassis.moveToPoint(19, 110, 3000, {.earlyExitRange=2}, false);
    // //chassis.moveToPoint(60, 120, 1000, {.earlyExitRange=2}, false);
    // chassis.moveToPoint(50, 135, 2000, {.forwards=false, .minSpeed=140}, false);
    // chassis.moveToPoint(0, 128, 2000, {.forwards=false, .minSpeed=140}, false);
    // chassis.moveToPoint(-89, 135, 2000, {.forwards=false, .minSpeed=140}, false);
}   